from direct.showbase.ShowBase import ShowBase

class Avion(ShowBase):
	Acercamiento = 50
	Altitud = 0
	Horizontal = 0
	
	Velocidad = 0.5
	VelocidadAcercamiento = 0.5
	
	def __init__(self):
		
		ShowBase.__init__(self)
		self.model = loader.loadModel("li2_2.bam")
		self.model.reparentTo(render)
		self.model.setPos(self.Horizontal, self.Acercamiento , self.Altitud)

		self.accept("w", self.Acercar)
		self.accept("s", self.Alejar)
		self.accept("a", self.Izquierda)
		self.accept("d", self.Derecha)
		self.accept("2", self.Subir)
		self.accept("x", self.Bajar)

	def Acercar(self):
		self.Acercamiento = self.Acercamiento + self.VelocidadAcercamiento
		self.model.setPos(self.Horizontal, self.Acercamiento , self.Altitud)
		print ("Acercar", self.Altitud)

	def Alejar(self):
		self.Acercamiento = self.Acercamiento - self.VelocidadAcercamiento
		self.model.setPos(self.Horizontal, self.Acercamiento , self.Altitud)
		print ("Alejar", self.Altitud)


	def Subir(self):
		self.Altitud = self.Altitud + self.Velocidad
		self.model.setPos(self.Horizontal, self.Acercamiento , self.Altitud)
		print ("Subir")

	def Bajar(self):
		self.Altitud = self.Altitud - self.Velocidad
		self.model.setPos(self.Horizontal, self.Acercamiento , self.Altitud)
		print ("Bajar")

	def Izquierda(self):
		self.Horizontal = self.Horizontal-self.Velocidad
		self.model.setPos(self.Horizontal, self.Acercamiento , self.Altitud)
		print ("Izquierda")

	def Derecha(self):
		self.Horizontal = self.Horizontal+self.Velocidad
		self.model.setPos(self.Horizontal, self.Acercamiento , self.Altitud)
		print ("Derecha")


miAvion = Avion()
miAvion.run()

